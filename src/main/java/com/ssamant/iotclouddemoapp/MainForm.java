/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ssamant.iotclouddemoapp;

import com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderSymmetricKey;
import com.ssamant.connectioninfo.ConnectionInfo;
import java.awt.Color;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Sunil
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPaneMain = new javax.swing.JTabbedPane();
        jPanelConfigParams = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFieldNumDevices = new javax.swing.JTextField();
        btnRegisterIoTDevice = new javax.swing.JButton();
        labelDeviceRegSuccess = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboBoxMsgProtocols = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtFieldTelemFrequency = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFieldMsgSize = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFieldSendingDeviceNums = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtFieldDuration = new javax.swing.JTextField();
        btnSendTelemetry = new javax.swing.JButton();
        btnStopSending = new javax.swing.JButton();
        jPanelImage = new javax.swing.JPanel();
        jPanelSendTelemetry = new javax.swing.JPanel();
        jPanelDeviceDetails = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDeviceInfo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IoT Device to Cloud Telemetry Demo [Azure cloud]");

        tabbedPaneMain.setAutoscrolls(true);
        tabbedPaneMain.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("No of devices to register (to IoT Hub):");

        txtFieldNumDevices.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFieldNumDevices.setText("1");

        btnRegisterIoTDevice.setText("Register Device(s)");
        btnRegisterIoTDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterIoTDeviceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegisterIoTDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFieldNumDevices, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(labelDeviceRegSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldNumDevices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDeviceRegSuccess))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegisterIoTDevice)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Messaging Protocol:");

        comboBoxMsgProtocols.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MQTT", "AMQP", " " }));

        jLabel3.setText("Telemetry Send Interval:");

        txtFieldTelemFrequency.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFieldTelemFrequency.setText("5000");

        jLabel4.setText("Message Size (per device in bytes):");

        txtFieldMsgSize.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFieldMsgSize.setText("100");

        jLabel5.setText("No of devices sending telemetry:");

        txtFieldSendingDeviceNums.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFieldSendingDeviceNums.setText("1");

        jLabel6.setText("Duration (in minutes):");

        txtFieldDuration.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFieldDuration.setText("10");

        btnSendTelemetry.setText("Send Telemetry");
        btnSendTelemetry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendTelemetryActionPerformed(evt);
            }
        });

        btnStopSending.setText("Stop Sending");

        jPanelImage.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanelImageLayout = new javax.swing.GroupLayout(jPanelImage);
        jPanelImage.setLayout(jPanelImageLayout);
        jPanelImageLayout.setHorizontalGroup(
            jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 444, Short.MAX_VALUE)
        );
        jPanelImageLayout.setVerticalGroup(
            jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnStopSending, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                    .addComponent(btnSendTelemetry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                    .addComponent(comboBoxMsgProtocols, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFieldTelemFrequency)
                    .addComponent(txtFieldMsgSize)
                    .addComponent(txtFieldSendingDeviceNums)
                    .addComponent(txtFieldDuration))
                .addGap(18, 18, 18)
                .addComponent(jPanelImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxMsgProtocols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFieldTelemFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtFieldMsgSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtFieldSendingDeviceNums, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtFieldDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnSendTelemetry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStopSending)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelConfigParamsLayout = new javax.swing.GroupLayout(jPanelConfigParams);
        jPanelConfigParams.setLayout(jPanelConfigParamsLayout);
        jPanelConfigParamsLayout.setHorizontalGroup(
            jPanelConfigParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelConfigParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelConfigParamsLayout.setVerticalGroup(
            jPanelConfigParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfigParamsLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        tabbedPaneMain.addTab("Register Device & Config Params", jPanelConfigParams);

        javax.swing.GroupLayout jPanelSendTelemetryLayout = new javax.swing.GroupLayout(jPanelSendTelemetry);
        jPanelSendTelemetry.setLayout(jPanelSendTelemetryLayout);
        jPanelSendTelemetryLayout.setHorizontalGroup(
            jPanelSendTelemetryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jPanelSendTelemetryLayout.setVerticalGroup(
            jPanelSendTelemetryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );

        tabbedPaneMain.addTab("View Results", jPanelSendTelemetry);

        tableDeviceInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Device ID", "Message Protocol", "Message Size", "Telemetry Interval"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableDeviceInfo);

        javax.swing.GroupLayout jPanelDeviceDetailsLayout = new javax.swing.GroupLayout(jPanelDeviceDetails);
        jPanelDeviceDetails.setLayout(jPanelDeviceDetailsLayout);
        jPanelDeviceDetailsLayout.setHorizontalGroup(
            jPanelDeviceDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDeviceDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDeviceDetailsLayout.setVerticalGroup(
            jPanelDeviceDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDeviceDetailsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tabbedPaneMain.addTab("View Device Details", jPanelDeviceDetails);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneMain))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbedPaneMain)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    /**
     * function to register device(s) to IoT Hub
     *
     * @param evt
     */
    private void btnRegisterIoTDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterIoTDeviceActionPerformed

        if (!"".equals(txtFieldNumDevices.getText().trim())) {
            try {
                int numOfDevices = Integer.parseInt(txtFieldNumDevices.getText().trim());
                if (numOfDevices == 1) {
                    //single device registration 
                    if (ConnectionInfo.con == null) {
                        ConnectionInfo.getDbConnection();

                    }
                    //call device reg method through DPS individual device enrollment 
                    ProvisioningIndividualEnrollment.beginIndividualDeviceRegistration();

                } else {
                    // bulk device registration - using Group Enrollment DPS service
                    for(int i = 0; i < numOfDevices; i++) {
                        ProvisioningGroupEnrollment.beginDeviceProvisioningUnderGroupEnrollment("0" + String.valueOf(i));
                    }
                }
                labelDeviceRegSuccess.setText("Device(s) registered successfully!");
            } catch (NumberFormatException ex) {
                System.out.println(ex.getMessage());
            } catch (SQLException | IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                labelDeviceRegSuccess.setForeground(Color.red);
                labelDeviceRegSuccess.setText("Device registration failed...");
            }
        }
    }//GEN-LAST:event_btnRegisterIoTDeviceActionPerformed
    
    /**
     * Send device telemetry to cloud based on the configured parameters
     * @param evt 
     */
    private void btnSendTelemetryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendTelemetryActionPerformed
        
        String transportProtocol = comboBoxMsgProtocols.getSelectedItem().toString();
        int telemInterval = Integer.parseInt(txtFieldTelemFrequency.getText().trim());
        int msgSize = Integer.parseInt(txtFieldMsgSize.getText().trim());
        int noOfDevice = Integer.parseInt(txtFieldSendingDeviceNums.getText().trim());
        int duration = Integer.parseInt(txtFieldDuration.getText().trim());
        Device device = new Device("device-id", "connection-string", msgSize, telemInterval, transportProtocol);
        DeviceTelemetryService.sendDeviceTelemetryToCloud(device);
    }//GEN-LAST:event_btnSendTelemetryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnRegisterIoTDevice;
    private javax.swing.JButton btnSendTelemetry;
    private javax.swing.JButton btnStopSending;
    private javax.swing.JComboBox<String> comboBoxMsgProtocols;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanelConfigParams;
    public javax.swing.JPanel jPanelDeviceDetails;
    private javax.swing.JPanel jPanelImage;
    public javax.swing.JPanel jPanelSendTelemetry;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel labelDeviceRegSuccess;
    private javax.swing.JTabbedPane tabbedPaneMain;
    private javax.swing.JTable tableDeviceInfo;
    private javax.swing.JTextField txtFieldDuration;
    private javax.swing.JTextField txtFieldMsgSize;
    private javax.swing.JTextField txtFieldNumDevices;
    private javax.swing.JTextField txtFieldSendingDeviceNums;
    private javax.swing.JTextField txtFieldTelemFrequency;
    // End of variables declaration//GEN-END:variables
}
